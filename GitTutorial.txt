GitTutorial

Set your username: git config --global user.name "FIRST_NAME LAST_NAME"
Set your email address: git config --global user.email "MY_NAME@example.com"

Список корисних команд для роботи з git
1. git clone - копіює репозиторій (папку з файлами) на компютер
2. git branch "branchName" - створює гілку з назвою "branchName"
3. git checkout "branchName" - переходить на гілку з назвою "branchName"
4. git checkout -b "branchName" - створюємо гілку з git назвою "branchName" і переходимо на неї
5. git add . - додати всі файти з поточної папки (.) в staging area
6. git commit -m "commit message" - підписуємо збереженні зміни в файлах
7. git push - відправляємо зміни на сайт github
8. git pull - отримуємо останні зміни з сайту github
9. git status - показуємо статус проекту
10. git branch - показуємо список гілок в проекті
11. git branch -r - показуємо список гілок на сайті github
12. git branch -a - показуємо список гілок на компютері та на сайті github
13. git fetch - отримуємо зміни з сайту github
14. git stash - зберігаємо не збережені зміни в файлах і кладемо їх в буфер обміну
15. git stash apply - вставляємо збережені зміни з буфера обміну
16. git merge "banchName" - зливаємо гілку з назвою "branchName" в поточну гілку
17. git merge --abort - відміняємо зливання гілок
18. git branch -d branchName - видаляє гілку локально з проекту
19. git push origin --delete name - видаляє гілку з сайту github
20. git diff - показує відрізки рядків між двома версіями файлу (між двома комітами)
21. git log - показує історію комітів
22. cd gitTutorial - переходимо в папку gitTutorial
23. rm -rf .git - видалити репозиторій з git

Для того щоб вийти з режиму перегляду комітів використовуйте клавішу q (стосується команди №20 і №21)

======================================================================================================

Для инициализации репозитория - пишем git init .
Чтобы понять текущее состояние репозитория - пишем git status
Чтобы добавить файл в staging area - пишем git add <имя файла>
Чтобы сделать коммит - пишем git commit -m "<Описание коммита>"
Чтобы посмотреть историю коммитов - пишем git log. Эта команда покажет список коммитов и их хешей.
Чтобы перейти к конкретному коммиту - пишем git checkout <hash>
Чтобы связать удаленный репозиторий с локальным - один раз пишем git remote add origin <адрес репозитория>
Чтобы глянуть  список удаленных репозиториев - пишем git remote --v
Чтобы залить код на удаленный репозиторий - пишем git push origin master
Чтобы подтянуть код с удаленного репозитория - пишем git pull origin master

КАК РАБОТАТЬ С ВЕТКАМИ
git branch - показывает, на какой вы сейчас ветки
git checkout -b <branch_name> - создает новую ветку с именем <branch_name> и переключается на эту ветку
git checkout <branch_name> - переключается на существующую ветку с именем <branch_name>
